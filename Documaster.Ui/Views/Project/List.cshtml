@using Documaster.Model.Entities
@model IEnumerable<Documaster.Model.Entities.Project>

@{
    ViewBag.Title = "Lista proiecte";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var sortDescending = !(bool)ViewBag.SortDescending;
    var colorDictionary = ((IList<ProjectStatus>)ViewBag.ProjectStatuses).ToDictionary(x => x.Name, y => y.Color);
}
<script src="~/Scripts/Documaster/colorTool.js"></script>

<br />
<div class="displayContent">
    <p>
        @Html.ActionLink("Lucrare Noua", "Create", new { customerId = ViewBag.CustomerId }, new { projectId = ViewBag.ProjectId, @class = "btn btn-primary" })
    </p>
    <table class="table" id="projectsTable" style="width: 100%">
        <thead>
            <tr>
                <th>
                    @Html.ActionLink("Nr.", "List", new { sortProperty = "Number", sortDescending })
                </th>
                <th>
                    @Html.ActionLink("Creat pe", "List", new { sortProperty = "CreationDate", sortDescending })
                </th>
                <th>
                    @Html.ActionLink("Stare", "List", new { sortProperty = "ProjectStatus.Name", sortDescending })
                </th>
                <th>
                    @Html.ActionLink("Nume client", "List", new { sortProperty = "Customer.Name", sortDescending })
                </th>
                <th style="width: 40%">
                    @Html.ActionLink("Nume proiect", "List", new { sortProperty = "Name", sortDescending })
                </th>
                <th style="width: 10%">
                    @Html.ActionLink("CU expira la", "List", new { sortProperty = "Expire", sortDescending })
                </th>
                <th style="width: 15%"></th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null)
            {
                foreach (var item in Model)
                {
                    var willExpire = item.Expire.HasValue && (item.Expire - DateTime.Now).Value.TotalDays < 30 ? "willExpire" : "";

                    <tr class="@willExpire">

                        @Html.HiddenFor(modelItem => item.Id)
                        @Html.HiddenFor(modelItem => item.ProjectStatus.Color, new { @id = "color" })
                 
                        <td>
                            @Html.DisplayFor(modelItem => item.Number)
                        </td>
                        <td>
                            @item.Created.ToString("dd.MM.yyyy")
                        </td>
                        <td>
                            <div class="form-group">
                                <div class="col-md-10">
                                    @Html.DropDownListFor(modelItem => item.ProjectStatusId, new SelectList(ViewBag.ProjectStatuses, "Id", "Name", item.ProjectStatusId),
                                                                                       new { @class = "form-control projectStatus" })
                                </div>
                            </div>
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Customer.Name)
                        </td>
                        <td>
                            @Html.ActionLink(item.Name, "CustomerProject", "Requirement", new { projectId = item.Id }, "")
                        </td>
                        <td>
                            @if (item.Expire.HasValue)
                            {
                                @item.Expire.Value.ToString("dd.MM.yyyy");
                            }
                        </td>
                        <td>
                            <a href="@Url.Action("Edit", new {id = item.Id})">
                                <span class="glyphicon glyphicon-pencil" title="Modifica"></span>
                            </a>|
                            <a href="@Url.Action("ProjectRequirements", "Requirement", new {projectId = item.Id}, "")">
                                <span class="glyphicon glyphicon-list-alt" title="Cerinte"></span>
                            </a> |
                            <a href="@Url.Action("Delete", new {id = item.Id})">
                                <span class=" glyphicon glyphicon-trash" title="Sterge"></span>
                            </a>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>
<script type="text/javascript">

    var javaScriptColorDictionary = @Html.Raw(Json.Encode(colorDictionary));
    window.documaster.colorTool = colorTool(javaScriptColorDictionary);

    $(document).ready(function () {

        var groupColumn = 1;
        var table = $("#projectsTable").DataTable({
            "columnDefs": [
                {
                    "visible": false,
                    "targets": groupColumn
                }
            ],
            "order": [[groupColumn, 'asc']],
            "paging": true,
            "info": true,
            "lengthChange": false,
            "responsive": true,

            "drawCallback": function (settings) {
                var api = this.api();
                var rows = api.rows({ page: 'current' }).nodes();
                var last = null;

                api.column(groupColumn, { page: 'current'}).data().each(function (group, i) {
                    var getYear = group.split('.')[2];
                    
                    if (last !== getYear) {
                        $(rows).eq(i).before(
                            '<tr class="year"><td colspan="8">' + getYear + '<span>-</span></td></tr>'
                        );
                        last = getYear;
                    }
                });
            }
        });

       // Order by the grouping
        $('#projectsTable tbody').on('click', 'tr.year', function() {
            var currentOrder = table.order()[0];
            if(currentOrder[0] === groupColumn && currentOrder[1] === 'asc'){
                table.order([groupColumn, 'desc']).draw();
            }else {
                table.order([groupColumn, 'asc']).draw();
            }
        });

        $('.year').click(function () {
            $(this).find('span').text(function (_, value) {
                return value=='-'?'+': '-'
            });
            $(this).nextUntil('tr.year').slideToggle(500);
        });

         var createDateInput = $("#creationDate");
         var value = createDateInput.attr("value");
        if (value !== "") {
            var date = new Date(value);
            createDateInput.attr("value", date.toLocaleDateString('ro'));
        }

        var expireDateInput = $("#expire-textbox");
         var value = expireDateInput.attr("value");
        if (value !== "") {
            var date = new Date(value);
            expireDateInput.attr("value", date.toLocaleDateString('ro'));

        }

        $('.projectStatus').each(function () {
            var statusName = $(this).find("option:selected").text();
            window.documaster.colorTool.setStatusDropdownColor($(this), statusName);
        });

        $('.projectStatus option').each(function () {
            var statusName = $(this).text();
            window.documaster.colorTool.setStatusDropdownColor($(this), statusName);
        });

        $('.projectStatus').change(function () {
            var projectStatusId = $(this).val();
            var projectId = $(this).parent().parent().parent().siblings()[0].value;
            $.post("ChangeProjectStatus", { projectId, projectStatusId });

            var statusName = $(this).find("option:selected").text();
            window.documaster.colorTool.setStatusDropdownColor($(this), statusName);
        });



    });
</script>

