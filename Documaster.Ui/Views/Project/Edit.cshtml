@using Documaster.Model.Entities
@model Documaster.Model.Entities.Project
@{
    ViewBag.Title = "Modifica proiect";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var colorDictionary = ((IList<ProjectStatus>)ViewBag.ProjectStatuses).ToDictionary(x => x.Name, y => y.Color);
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script src="~/Scripts/combodate/combodate.js"></script>
<script src="~/Scripts/combodate/moment.min.js"></script>
<script src="~/Scripts/jscolor.js"></script>
<script src="~/Scripts/Documaster/colorTool.js"></script>

<h2>Modifica proiect</h2>

@using (Html.BeginForm("Edit", "Project", FormMethod.Post, htmlAttributes: new { id = "projectsForm"}))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.ExpireDay, new { id = "expireDay" })
    @Html.HiddenFor(model => model.ExpireMonth, new { id = "expireMonth" })
    @Html.HiddenFor(model => model.ExpireYear, new { id = "expireYear" })

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.Customer.Id)
        <div class="form-group">
            @Html.LabelFor(model => model.Number, "Numar", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Number, new { htmlAttributes = new { @class = "form-control" }, autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.Number, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Customer.Name, "Nume client", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Customer.Name, new { htmlAttributes = new { @class = "form-control" }, autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.Customer.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        @*insert dropdown*@
        <div class="form-group">
            @Html.LabelFor(model => model.ProjectStatus.Name, "Stare", new { @class = "control-label col-md-2" })
            <div class="col-md-10" id="color">
                @Html.DropDownList("ProjectStatusId", new SelectList(ViewBag.ProjectStatuses, "Id", "Name"), new { @class = "form-control jscolor" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Customer.Telephone, "Nr. telefon", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Customer.Telephone, new { htmlAttributes = new { @class = "form-control" }, autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.Customer.Telephone, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Customer.AdditionalInfo1, "CNP/CUI", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Customer.AdditionalInfo1, new { htmlAttributes = new { @class = "form-control" }, autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.Customer.AdditionalInfo1, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Customer.AdditionalInfo2, "Date firma", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Customer.AdditionalInfo2, new { htmlAttributes = new { @class = "form-control" }, autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.Customer.AdditionalInfo2, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Customer.Email, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Customer.Email, new { htmlAttributes = new { @class = "form-control" }, autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.Customer.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Name, "Nume proiect", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" }, autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Customer.Address, "Adresa", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Customer.Address, new { htmlAttributes = new { @class = "form-control" }, autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.Customer.Address, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Expire, "Expira la", new { @class = "control-label col-md-2" })
            <div class="col-md-10">


                @Html.EditorFor(model => model.Expire, new { htmlAttributes = new { @class = "form-control", id = "expire-textbox" }, autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.Expire, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Salveaza" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Inapoi la lista", "Index")
</div>

<script>
    $("#projectsForm").submit(function (event) {
        var expireDay = $("#projectsForm .day option:selected").text();
        var expireMonth = $("#projectsForm .month option:selected").text();
        var expireYear = $("#projectsForm .year option:selected").text();
        var expirationDateInput = $("#expire-textbox");
        expirationDateInput.val("01/01/2001");

        $("#expireDay").val(expireDay);
        $("#expireMonth").val(expireMonth);
        $("#expireYear").val(expireYear);
    });

    $(document).ready(function () {

        var dateInput = $("#expire-textbox");
        var value = dateInput.attr("value");

        dateInput.combodate({
            format: 'MM/DD/YYYY',
            template: 'DD MM YYYY',
            firstItem: 'none',
            maxYear: new Date().getFullYear() + 10,
            smartDays: true
        });

        if (value != null) {
            dateInput.combodate('setValue', new Date(value));
        }

        var javaScriptColorDictionary = @Html.Raw(Json.Encode(colorDictionary));
        window.documaster.colorTool = colorTool(javaScriptColorDictionary);

        $('#ProjectStatusId').each(function () {
            var statusName = $(this).find("option:selected").text();
            window.documaster.colorTool.setStatusDropdownColor($(this), statusName);
        });

        $('#ProjectStatusId option').each(function () {
            var statusName = $(this).text();
            window.documaster.colorTool.setStatusDropdownColor($(this), statusName);
        });

        $('#ProjectStatusId').change(function () {
            var statusName = $(this).find("option:selected").text();
            window.documaster.colorTool.setStatusDropdownColor($(this), statusName);
        });
    });
</script>